{"createdAt":"2025-07-30T06:02:44.033Z","updatedAt":"2025-07-30T06:36:55.000Z","id":"VqJwWPBfuHkyHDVo","name":"TELEGRAM to TODOIST","active":false,"isArchived":false,"nodes":[{"parameters":{"chatId":"40281969","text":"ciao a te","additionalFields":{}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[-544,432],"id":"4105a0f5-39de-45c5-af24-67ed4c1c2757","name":"Send a text message","webhookId":"16862365-d777-48b9-8ac2-f65f92376215","credentials":{"telegramApi":{"id":"0ZR26YVmLUTLvIl7","name":"TELEGRAM ARGO"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"id":"71ae9cfe-99b5-4c68-bdc4-c03fc625ac0c","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[-320,288],"typeVersion":1.2,"credentials":{"openAiApi":{"id":"qUMJt5QWAuhALJmk","name":"OpenAi account"}}},{"parameters":{"promptType":"define","text":"={{ $json.text }}","hasOutputParser":true,"messages":{"messageValues":[{"message":"=\n**Prompt di Sistema:**\n\n```\nSei un agente AI che agisce come assistente di gestione progetti. L'utente ti fornirà una descrizione di un'attività o progetto. Il tuo compito è suddividere questa attività o progetto in sotto-attività più piccole e gestibili. Dovrai quindi formattare ogni sotto-attività in un oggetto JSON adatto per l'input allo strumento \"Todoist\" e fornire questi oggetti JSON in una lista.\n\n**Requisiti:**\n\n1.  **Decomposizione delle Sotto-Attività:** Suddividi l'attività o progetto fornito dall'utente in sotto-attività logiche e attuabili. Ogni sotto-attività dovrebbe essere autonoma, completabile e misurabile.\n2.  **Formato JSON per Todoist:** Formatta ogni sotto-attività come un oggetto JSON con la seguente struttura:\n\n    ```json\n    {\n      \"content\": \"[Descrizione dell'Attività]\",\n      \"priority\": [Livello di Priorità (1-4, dove 4 è il più alto)]\n    }\n    ```\n\n    *   `content`: Una descrizione chiara e concisa dell'attività.\n    *   `priority`: Un numero intero che rappresenta la priorità dell'attività, da 1 (più bassa) a 4 (più alta). Considera l'importanza e l'urgenza dell'attività quando assegni la priorità.\n\n3.  **Utilizzo dello Strumento - Output JSON Todoist:** Dopo aver decomposto il progetto in sotto-attività, **DEVI** formattare ogni sotto-attività nella struttura JSON specificata sopra e presentare tutti gli oggetti JSON in una lista Python. Questa lista sarà l'input diretto per lo strumento \"Todoist\".\n\n4.  **Comprensione Contestuale:** Comprendi completamente il contesto dell'attività o progetto fornito dall'utente. Se necessario, chiedi informazioni aggiuntive o chiarimenti per risolvere eventuali ambiguità.\n\n5.  **Limitazioni:**\n\n    *   Evita sotto-attività molto generali o astratte.\n    *   Assicurati che ogni sotto-attività sia completabile e misurabile.\n    *   Quando crei sotto-attività, considera le competenze e le risorse dell'utente.\n    *   Assicurati che tutto l'output sia in formato JSON valido all'interno di una lista python\n\n**Input dell'Utente:**\n\nL'utente ti fornirà una descrizione dell'attività o progetto nel seguente formato:\n\n```\nDescrizione del Progetto: [Descrizione dell'Attività o Progetto Inserita dall'Utente]\n```\n\n**Esempio:**\n\n**Input dell'Utente:**\n\n```\nDescrizione del Progetto: Pianifica un offsite del team.\n```\n\n**Risposta dell'LLM:**\n\n```python\n[\n  {\n    \"content\": \"Ricerca potenziali location per l'offsite.\",\n    \"priority\": 3\n  },\n  {\n    \"content\": \"Determina il budget per l'offsite.\",\n    \"priority\": 4\n  },\n  {\n    \"content\": \"Invia un sondaggio per raccogliere le preferenze del team.\",\n    \"priority\": 3\n  },\n  {\n    \"content\": \"Prenota la venue scelta.\",\n    \"priority\": 4\n  },\n  {\n    \"content\": \"Pianifica attività di team-building.\",\n    \"priority\": 2\n  }\n]\n```\n\n**Modifiche Principali e Spiegazioni:**\n\n*   **Struttura JSON Semplificata:** L'oggetto JSON ora include solo `content` e `priority`.\n*   **Esempio Aggiornato:** La risposta dell'esempio riflette il formato JSON semplificato.\n*   **Concisione:** Il prompt è ora più conciso, concentrandosi solo sui campi necessari.\n\n**Versione Template Jinja2**\n\n```python\nfrom jinja2 import Template\n\ntemplate_string = \"\"\"\nSei un agente AI che agisce come assistente di gestione progetti. L'utente ti fornirà una descrizione di un'attività o progetto. Il tuo compito è suddividere questa attività o progetto in sotto-attività più piccole e gestibili. Dovrai quindi formattare ogni sotto-attività in un oggetto JSON adatto per l'input allo strumento \"Todoist\" e fornire questi oggetti JSON in una lista.\n\n**Requisiti:**\n\n1.  **Decomposizione delle Sotto-Attività:** Suddividi l'attività o progetto fornito dall'utente in sotto-attività logiche e attuabili. Ogni sotto-attività dovrebbe essere autonoma, completabile e misurabile.\n2.  **Formato JSON per Todoist:** Formatta ogni sotto-attività come un oggetto JSON con la seguente struttura:\n\n    ```json\n    {\n      \"content\": \"[Descrizione dell'Attività]\",\n      \"priority\": [Livello di Priorità (1-4, dove 4 è il più alto)]\n    }\n    ```\n\n    *   `content`: Una descrizione chiara e concisa dell'attività.\n    *   `priority`: Un numero intero che rappresenta la priorità dell'attività, da 1 (più bassa) a 4 (più alta). Considera l'importanza e l'urgenza dell'attività quando assegni la priorità.\n\n3.  **Utilizzo dello Strumento - Output JSON Todoist:** Dopo aver decomposto il progetto in sotto-attività, **DEVI** formattare ogni sotto-attività nella struttura JSON specificata sopra e presentare tutti gli oggetti JSON in una lista Python. Questa lista sarà l'input diretto per lo strumento \"Todoist\".\n\n4.  **Comprensione Contestuale:** Comprendi completamente il contesto dell'attività o progetto fornito dall'utente. Se necessario, chiedi informazioni aggiuntive o chiarimenti per risolvere eventuali ambiguità.\n\n5.  **Limitazioni:**\n\n    *   Evita sotto-attività molto generali o astratte.\n    *   Assicurati che ogni sotto-attività sia completabile e misurabile.\n    *   Quando crei sotto-attività, considera le competenze e le risorse dell'utente.\n    *   Assicurati che tutto l'output sia in formato JSON valido all'interno di una lista python\n\n**Input dell'Utente:**\n\nL'utente ti fornirà una descrizione dell'attività o progetto nel seguente formato:\n\n```\nDescrizione del Progetto: {{ project_description }}\n```\n\n**Esempio:**\n\n**Input dell'Utente:**\n\n```\nDescrizione del Progetto: Pianifica un offsite del team.\n```\n\n**Risposta dell'LLM:**\n\n```python\n[\n  {\n    \"content\": \"Ricerca potenziali location per l'offsite.\",\n    \"priority\": 3\n  },\n  {\n    \"content\": \"Determina il budget per l'offsite.\",\n    \"priority\": 4\n  },\n  {\n    \"content\": \"Invia un sondaggio per raccogliere le preferenze del team.\",\n    \"priority\": 3\n  },\n  {\n    \"content\": \"Prenota la venue scelta.\",\n    \"priority\": 4\n  },\n  {\n    \"content\": \"Pianifica attività di team-building.\",\n    \"priority\": 2\n  }\n]\n```\n\"\"\"\n\ntemplate = Template(template_string)\n\n# Esempio di Utilizzo\nproject_description = \"Pianifica un offsite del team.\"\nprompt = template.render(project_description=project_description)\n\nprint(prompt)\n```"}]}},"id":"295e4cbc-60dc-46c3-8242-49160472b23d","name":"Basic LLM Chain","type":"@n8n/n8n-nodes-langchain.chainLlm","position":[-352,64],"typeVersion":1.5,"onError":"continueRegularOutput"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"af30c479-4542-405f-b315-37c50c4e2bef","operator":{"type":"string","operation":"exists","singleValue":true},"leftValue":"={{ $json.message.voice.file_id }}","rightValue":""}]},"renameOutput":true,"outputKey":"Audio"},{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"a3ca8cd4-fbb2-40b5-829a-24724f2fbc85","operator":{"type":"string","operation":"exists","singleValue":true},"leftValue":"={{ $json.message.text || \"\" }}","rightValue":""}]},"renameOutput":true,"outputKey":"Text"},{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"9bcfdee0-2f09-4037-a7b9-689ef392371d","operator":{"type":"string","operation":"exists","singleValue":true},"leftValue":"error","rightValue":""}]},"renameOutput":true,"outputKey":"Error"}]},"options":{}},"id":"5b78e929-30c1-4347-9c6d-033d1caf13aa","name":"Voice or Text?","type":"n8n-nodes-base.switch","position":[-1344,224],"typeVersion":3.2},{"parameters":{"resource":"file","fileId":"={{ $json.message.voice.file_id }}"},"id":"66ae0b83-30ab-4c63-b2da-b9fa48747d7a","name":"Fetch Voice Message","type":"n8n-nodes-base.telegram","position":[-912,-112],"webhookId":"23645237-4943-4c32-b18c-97c410cc3409","typeVersion":1.2,"credentials":{"telegramApi":{"id":"0ZR26YVmLUTLvIl7","name":"TELEGRAM ARGO"}}},{"parameters":{"resource":"audio","operation":"translate","options":{}},"id":"d5153b14-3afb-4283-b38b-6f60c425a804","name":"Transcribe Voice to Text","type":"@n8n/n8n-nodes-langchain.openAi","position":[-688,-112],"typeVersion":1.8,"credentials":{"openAiApi":{"id":"qUMJt5QWAuhALJmk","name":"OpenAi account"}}},{"parameters":{"assignments":{"assignments":[{"id":"b324a329-3c49-4f7f-b683-74331b7fe7f8","name":"=text","type":"string","value":"={{$json.message.text}}"}]},"options":{}},"id":"f5df9cc2-63ce-4c5e-93f8-7b247eb5ce32","name":"Prepare for LLM","type":"n8n-nodes-base.set","position":[-784,128],"typeVersion":3.4},{"parameters":{"jsonSchemaExample":"  {\n    \"content\": \"Send out invitations.\",\n    \"priority\": 3\n  }"},"id":"1d63daf0-0740-4d9e-8106-d8e0f87500b9","name":"Extract Tasks","type":"@n8n/n8n-nodes-langchain.outputParserStructured","position":[-192,288],"typeVersion":1.2},{"parameters":{"project":{"__rl":true,"mode":"list","value":"2349786654","cachedResultName":"Task"},"content":"={{ $json.output.content }}","options":{"priority":"={{ $json.output.priority }}"}},"id":"5d604ced-5ea3-470d-a6cf-ff5f418532ce","name":"Create Todoist Tasks","type":"n8n-nodes-base.todoist","position":[224,64],"typeVersion":2.1,"credentials":{"todoistApi":{"id":"cbe9oZHHHeSxCOdh","name":"Todoist account"}}},{"parameters":{"chatId":"={{ $('Receive Telegram Message').item.json.message.chat.id }}","text":"=Task : {{ $json.content }} Task Link :{{ $json.url }}","additionalFields":{}},"id":"d8e912cf-4b40-4192-90fb-6fc1815fa8e0","name":"Send Confirmation","type":"n8n-nodes-base.telegram","position":[480,64],"webhookId":"5699aecd-e061-4b7f-af7b-4a23eb7201c6","typeVersion":1.2,"credentials":{"telegramApi":{"id":"0ZR26YVmLUTLvIl7","name":"TELEGRAM ARGO"}}},{"parameters":{"content":" \n**This workflow listens for incoming voice or text messages from Telegram users.** ","height":320,"width":260},"id":"76bc1ed2-dee4-4781-8448-8b0fe34a632f","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[-1664,-224],"typeVersion":1},{"parameters":{"content":" **Voice messages are fetched from Telegram and transcribed into text using OpenAI's Whisper API.**  ","height":260,"width":460},"id":"f2de1701-eba0-4730-a95b-a1e6a39bbf89","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[-960,-208],"typeVersion":1},{"parameters":{"content":" \n**The LLM (OpenAI Chat Model) analyzes the text and breaks it down into tasks and sub-tasks, formatted for Todoist.**  ","height":440,"width":380},"id":"218c5a1e-9b6f-49cc-9f69-96f1f6788261","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[-400,-48],"typeVersion":1},{"parameters":{"updates":["message"],"additionalFields":{}},"type":"n8n-nodes-base.telegramTrigger","typeVersion":1.2,"position":[-1712,336],"id":"363e88e4-4837-41a6-a877-cce4a0ba59a0","name":"Receive Telegram Message","webhookId":"b2ae2ffc-2640-44e3-bb7f-ec70888ec75c","credentials":{"telegramApi":{"id":"0ZR26YVmLUTLvIl7","name":"TELEGRAM ARGO"}}}],"connections":{"Extract Tasks":{"ai_outputParser":[[{"node":"Basic LLM Chain","type":"ai_outputParser","index":0}]]},"Voice or Text?":{"main":[[{"node":"Fetch Voice Message","type":"main","index":0}],[{"node":"Prepare for LLM","type":"main","index":0}]]},"Basic LLM Chain":{"main":[[{"node":"Create Todoist Tasks","type":"main","index":0}]]},"Prepare for LLM":{"main":[[{"node":"Basic LLM Chain","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Basic LLM Chain","type":"ai_languageModel","index":0}]]},"Fetch Voice Message":{"main":[[{"node":"Transcribe Voice to Text","type":"main","index":0}]]},"Create Todoist Tasks":{"main":[[{"node":"Send Confirmation","type":"main","index":0}]]},"Transcribe Voice to Text":{"main":[[{"node":"Basic LLM Chain","type":"main","index":0}]]},"Receive Telegram Message":{"main":[[{"node":"Send a text message","type":"main","index":0},{"node":"Voice or Text?","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"ba851903-b0a1-4cfd-b2b9-72f19929645b","triggerCount":0,"tags":[]}